#include "pljit/parser/Parser.hpp"
#include "pljit/parsetree/ParseTreePrintVisitor.hpp"
#include <sstream>
#include <gtest/gtest.h>
//---------------------------------------------------------------------------
using namespace std;
using namespace pljit::parser;
using namespace pljit::parsetree;
//---------------------------------------------------------------------------
static const char* pt1 = "graph {\n"
                         "node [shape=plaintext, ordering=out];\n"
                         "\t0[label=\"function_definition\"];\n"
                         "\t1[label=\"parameter_declarations\"];\n"
                         "0-- 1;\n"
                         "\t2[label=\"PARAM\"];\n"
                         "1-- 2;\n"
                         "\t3[label=\"declarator_list\"];\n"
                         "1-- 3;\n"
                         "\t4[label=\"identifier\"];\n"
                         "3-- 4;\n"
                         "\t5[label=\"a\"];\n"
                         "4-- 5;\n"
                         "\t6[label=\",\"];\n"
                         "3-- 6;\n"
                         "\t7[label=\"identifier\"];\n"
                         "3-- 7;\n"
                         "\t8[label=\"b\"];\n"
                         "7-- 8;\n"
                         "\t9[label=\";\"];\n"
                         "1-- 9;\n"
                         "\t10[label=\"variable_declarations\"];\n"
                         "0-- 10;\n"
                         "\t11[label=\"VAR\"];\n"
                         "10-- 11;\n"
                         "\t12[label=\"declarator_list\"];\n"
                         "10-- 12;\n"
                         "\t13[label=\"identifier\"];\n"
                         "12-- 13;\n"
                         "\t14[label=\"d\"];\n"
                         "13-- 14;\n"
                         "\t15[label=\";\"];\n"
                         "10-- 15;\n"
                         "\t16[label=\"constant_declarations\"];\n"
                         "0-- 16;\n"
                         "\t17[label=\"CONST\"];\n"
                         "16-- 17;\n"
                         "\t18[label=\"init_declarator_list\"];\n"
                         "16-- 18;\n"
                         "\t19[label=\"init_declarator\"];\n"
                         "18-- 19;\n"
                         "\t20[label=\"identifier\"];\n"
                         "19-- 20;\n"
                         "\t21[label=\"c\"];\n"
                         "20-- 21;\n"
                         "\t22[label=\"=\"];\n"
                         "19-- 22;\n"
                         "\t23[label=\"literal\"];\n"
                         "19-- 23;\n"
                         "\t24[label=\"2\"];\n"
                         "23-- 24;\n"
                         "\t25[label=\";\"];\n"
                         "16-- 25;\n"
                         "\t26[label=\"compound_statement\"];\n"
                         "0-- 26;\n"
                         "\t27[label=\"BEGIN\"];\n"
                         "26-- 27;\n"
                         "\t28[label=\"statement_list\"];\n"
                         "26-- 28;\n"
                         "\t29[label=\"statement\"];\n"
                         "28-- 29;\n"
                         "\t30[label=\"assignment_expression\"];\n"
                         "29-- 30;\n"
                         "\t31[label=\"identifier\"];\n"
                         "30-- 31;\n"
                         "\t32[label=\"d\"];\n"
                         "31-- 32;\n"
                         "\t33[label=\":=\"];\n"
                         "30-- 33;\n"
                         "\t34[label=\"additive_expression\"];\n"
                         "30-- 34;\n"
                         "\t35[label=\"multiplicative_expression\"];\n"
                         "34-- 35;\n"
                         "\t36[label=\"unary_expression\"];\n"
                         "35-- 36;\n"
                         "\t37[label=\"primary_expression\"];\n"
                         "36-- 37;\n"
                         "\t38[label=\"(\"];\n"
                         "37-- 38;\n"
                         "\t39[label=\"additive_expression\"];\n"
                         "37-- 39;\n"
                         "\t40[label=\"multiplicative_expression\"];\n"
                         "39-- 40;\n"
                         "\t41[label=\"unary_expression\"];\n"
                         "40-- 41;\n"
                         "\t42[label=\"primary_expression\"];\n"
                         "41-- 42;\n"
                         "\t43[label=\"identifier\"];\n"
                         "42-- 43;\n"
                         "\t44[label=\"a\"];\n"
                         "43-- 44;\n"
                         "\t45[label=\"+\"];\n"
                         "39-- 45;\n"
                         "\t46[label=\"additive_expression\"];\n"
                         "39-- 46;\n"
                         "\t47[label=\"multiplicative_expression\"];\n"
                         "46-- 47;\n"
                         "\t48[label=\"unary_expression\"];\n"
                         "47-- 48;\n"
                         "\t49[label=\"primary_expression\"];\n"
                         "48-- 49;\n"
                         "\t50[label=\"identifier\"];\n"
                         "49-- 50;\n"
                         "\t51[label=\"b\"];\n"
                         "50-- 51;\n"
                         "\t52[label=\")\"];\n"
                         "37-- 52;\n"
                         "\t53[label=\";\"];\n"
                         "28-- 53;\n"
                         "\t54[label=\"statement\"];\n"
                         "28-- 54;\n"
                         "\t55[label=\"assignment_expression\"];\n"
                         "54-- 55;\n"
                         "\t56[label=\"identifier\"];\n"
                         "55-- 56;\n"
                         "\t57[label=\"d\"];\n"
                         "56-- 57;\n"
                         "\t58[label=\":=\"];\n"
                         "55-- 58;\n"
                         "\t59[label=\"additive_expression\"];\n"
                         "55-- 59;\n"
                         "\t60[label=\"multiplicative_expression\"];\n"
                         "59-- 60;\n"
                         "\t61[label=\"unary_expression\"];\n"
                         "60-- 61;\n"
                         "\t62[label=\"primary_expression\"];\n"
                         "61-- 62;\n"
                         "\t63[label=\"identifier\"];\n"
                         "62-- 63;\n"
                         "\t64[label=\"d\"];\n"
                         "63-- 64;\n"
                         "\t65[label=\"*\"];\n"
                         "60-- 65;\n"
                         "\t66[label=\"multiplicative_expression\"];\n"
                         "60-- 66;\n"
                         "\t67[label=\"unary_expression\"];\n"
                         "66-- 67;\n"
                         "\t68[label=\"primary_expression\"];\n"
                         "67-- 68;\n"
                         "\t69[label=\"identifier\"];\n"
                         "68-- 69;\n"
                         "\t70[label=\"c\"];\n"
                         "69-- 70;\n"
                         "\t71[label=\";\"];\n"
                         "28-- 71;\n"
                         "\t72[label=\"statement\"];\n"
                         "28-- 72;\n"
                         "\t73[label=\"RETURN\"];\n"
                         "72-- 73;\n"
                         "\t74[label=\"additive_expression\"];\n"
                         "72-- 74;\n"
                         "\t75[label=\"multiplicative_expression\"];\n"
                         "74-- 75;\n"
                         "\t76[label=\"unary_expression\"];\n"
                         "75-- 76;\n"
                         "\t77[label=\"primary_expression\"];\n"
                         "76-- 77;\n"
                         "\t78[label=\"identifier\"];\n"
                         "77-- 78;\n"
                         "\t79[label=\"d\"];\n"
                         "78-- 79;\n"
                         "\t80[label=\"END\"];\n"
                         "26-- 80;\n"
                         "\t81[label=\".\"];\n"
                         "0-- 81;\n"
                         "}\n";
//---------------------------------------------------------------------------
static const char* pt2 = "graph {\n"
                         "node [shape=plaintext, ordering=out];\n"
                         "\t0[label=\"function_definition\"];\n"
                         "\t1[label=\"variable_declarations\"];\n"
                         "0-- 1;\n"
                         "\t2[label=\"VAR\"];\n"
                         "1-- 2;\n"
                         "\t3[label=\"declarator_list\"];\n"
                         "1-- 3;\n"
                         "\t4[label=\"identifier\"];\n"
                         "3-- 4;\n"
                         "\t5[label=\"d\"];\n"
                         "4-- 5;\n"
                         "\t6[label=\",\"];\n"
                         "3-- 6;\n"
                         "\t7[label=\"identifier\"];\n"
                         "3-- 7;\n"
                         "\t8[label=\"e\"];\n"
                         "7-- 8;\n"
                         "\t9[label=\";\"];\n"
                         "1-- 9;\n"
                         "\t10[label=\"compound_statement\"];\n"
                         "0-- 10;\n"
                         "\t11[label=\"BEGIN\"];\n"
                         "10-- 11;\n"
                         "\t12[label=\"statement_list\"];\n"
                         "10-- 12;\n"
                         "\t13[label=\"statement\"];\n"
                         "12-- 13;\n"
                         "\t14[label=\"assignment_expression\"];\n"
                         "13-- 14;\n"
                         "\t15[label=\"identifier\"];\n"
                         "14-- 15;\n"
                         "\t16[label=\"d\"];\n"
                         "15-- 16;\n"
                         "\t17[label=\":=\"];\n"
                         "14-- 17;\n"
                         "\t18[label=\"additive_expression\"];\n"
                         "14-- 18;\n"
                         "\t19[label=\"multiplicative_expression\"];\n"
                         "18-- 19;\n"
                         "\t20[label=\"unary_expression\"];\n"
                         "19-- 20;\n"
                         "\t21[label=\"-\"];\n"
                         "20-- 21;\n"
                         "\t22[label=\"primary_expression\"];\n"
                         "20-- 22;\n"
                         "\t23[label=\"literal\"];\n"
                         "22-- 23;\n"
                         "\t24[label=\"1\"];\n"
                         "23-- 24;\n"
                         "\t25[label=\"*\"];\n"
                         "19-- 25;\n"
                         "\t26[label=\"multiplicative_expression\"];\n"
                         "19-- 26;\n"
                         "\t27[label=\"unary_expression\"];\n"
                         "26-- 27;\n"
                         "\t28[label=\"primary_expression\"];\n"
                         "27-- 28;\n"
                         "\t29[label=\"(\"];\n"
                         "28-- 29;\n"
                         "\t30[label=\"additive_expression\"];\n"
                         "28-- 30;\n"
                         "\t31[label=\"multiplicative_expression\"];\n"
                         "30-- 31;\n"
                         "\t32[label=\"unary_expression\"];\n"
                         "31-- 32;\n"
                         "\t33[label=\"primary_expression\"];\n"
                         "32-- 33;\n"
                         "\t34[label=\"literal\"];\n"
                         "33-- 34;\n"
                         "\t35[label=\"12\"];\n"
                         "34-- 35;\n"
                         "\t36[label=\"/\"];\n"
                         "31-- 36;\n"
                         "\t37[label=\"multiplicative_expression\"];\n"
                         "31-- 37;\n"
                         "\t38[label=\"unary_expression\"];\n"
                         "37-- 38;\n"
                         "\t39[label=\"primary_expression\"];\n"
                         "38-- 39;\n"
                         "\t40[label=\"(\"];\n"
                         "39-- 40;\n"
                         "\t41[label=\"additive_expression\"];\n"
                         "39-- 41;\n"
                         "\t42[label=\"multiplicative_expression\"];\n"
                         "41-- 42;\n"
                         "\t43[label=\"unary_expression\"];\n"
                         "42-- 43;\n"
                         "\t44[label=\"-\"];\n"
                         "43-- 44;\n"
                         "\t45[label=\"primary_expression\"];\n"
                         "43-- 45;\n"
                         "\t46[label=\"literal\"];\n"
                         "45-- 46;\n"
                         "\t47[label=\"6\"];\n"
                         "46-- 47;\n"
                         "\t48[label=\")\"];\n"
                         "39-- 48;\n"
                         "\t49[label=\")\"];\n"
                         "28-- 49;\n"
                         "\t50[label=\";\"];\n"
                         "12-- 50;\n"
                         "\t51[label=\"statement\"];\n"
                         "12-- 51;\n"
                         "\t52[label=\"assignment_expression\"];\n"
                         "51-- 52;\n"
                         "\t53[label=\"identifier\"];\n"
                         "52-- 53;\n"
                         "\t54[label=\"e\"];\n"
                         "53-- 54;\n"
                         "\t55[label=\":=\"];\n"
                         "52-- 55;\n"
                         "\t56[label=\"additive_expression\"];\n"
                         "52-- 56;\n"
                         "\t57[label=\"multiplicative_expression\"];\n"
                         "56-- 57;\n"
                         "\t58[label=\"unary_expression\"];\n"
                         "57-- 58;\n"
                         "\t59[label=\"primary_expression\"];\n"
                         "58-- 59;\n"
                         "\t60[label=\"identifier\"];\n"
                         "59-- 60;\n"
                         "\t61[label=\"d\"];\n"
                         "60-- 61;\n"
                         "\t62[label=\"+\"];\n"
                         "56-- 62;\n"
                         "\t63[label=\"additive_expression\"];\n"
                         "56-- 63;\n"
                         "\t64[label=\"multiplicative_expression\"];\n"
                         "63-- 64;\n"
                         "\t65[label=\"unary_expression\"];\n"
                         "64-- 65;\n"
                         "\t66[label=\"+\"];\n"
                         "65-- 66;\n"
                         "\t67[label=\"primary_expression\"];\n"
                         "65-- 67;\n"
                         "\t68[label=\"literal\"];\n"
                         "67-- 68;\n"
                         "\t69[label=\"2\"];\n"
                         "68-- 69;\n"
                         "\t70[label=\";\"];\n"
                         "12-- 70;\n"
                         "\t71[label=\"statement\"];\n"
                         "12-- 71;\n"
                         "\t72[label=\"assignment_expression\"];\n"
                         "71-- 72;\n"
                         "\t73[label=\"identifier\"];\n"
                         "72-- 73;\n"
                         "\t74[label=\"e\"];\n"
                         "73-- 74;\n"
                         "\t75[label=\":=\"];\n"
                         "72-- 75;\n"
                         "\t76[label=\"additive_expression\"];\n"
                         "72-- 76;\n"
                         "\t77[label=\"multiplicative_expression\"];\n"
                         "76-- 77;\n"
                         "\t78[label=\"unary_expression\"];\n"
                         "77-- 78;\n"
                         "\t79[label=\"-\"];\n"
                         "78-- 79;\n"
                         "\t80[label=\"primary_expression\"];\n"
                         "78-- 80;\n"
                         "\t81[label=\"(\"];\n"
                         "80-- 81;\n"
                         "\t82[label=\"additive_expression\"];\n"
                         "80-- 82;\n"
                         "\t83[label=\"multiplicative_expression\"];\n"
                         "82-- 83;\n"
                         "\t84[label=\"unary_expression\"];\n"
                         "83-- 84;\n"
                         "\t85[label=\"-\"];\n"
                         "84-- 85;\n"
                         "\t86[label=\"primary_expression\"];\n"
                         "84-- 86;\n"
                         "\t87[label=\"(\"];\n"
                         "86-- 87;\n"
                         "\t88[label=\"additive_expression\"];\n"
                         "86-- 88;\n"
                         "\t89[label=\"multiplicative_expression\"];\n"
                         "88-- 89;\n"
                         "\t90[label=\"unary_expression\"];\n"
                         "89-- 90;\n"
                         "\t91[label=\"-\"];\n"
                         "90-- 91;\n"
                         "\t92[label=\"primary_expression\"];\n"
                         "90-- 92;\n"
                         "\t93[label=\"identifier\"];\n"
                         "92-- 93;\n"
                         "\t94[label=\"e\"];\n"
                         "93-- 94;\n"
                         "\t95[label=\")\"];\n"
                         "86-- 95;\n"
                         "\t96[label=\")\"];\n"
                         "80-- 96;\n"
                         "\t97[label=\";\"];\n"
                         "12-- 97;\n"
                         "\t98[label=\"statement\"];\n"
                         "12-- 98;\n"
                         "\t99[label=\"RETURN\"];\n"
                         "98-- 99;\n"
                         "\t100[label=\"additive_expression\"];\n"
                         "98-- 100;\n"
                         "\t101[label=\"multiplicative_expression\"];\n"
                         "100-- 101;\n"
                         "\t102[label=\"unary_expression\"];\n"
                         "101-- 102;\n"
                         "\t103[label=\"primary_expression\"];\n"
                         "102-- 103;\n"
                         "\t104[label=\"identifier\"];\n"
                         "103-- 104;\n"
                         "\t105[label=\"e\"];\n"
                         "104-- 105;\n"
                         "\t106[label=\";\"];\n"
                         "12-- 106;\n"
                         "\t107[label=\"statement\"];\n"
                         "12-- 107;\n"
                         "\t108[label=\"RETURN\"];\n"
                         "107-- 108;\n"
                         "\t109[label=\"additive_expression\"];\n"
                         "107-- 109;\n"
                         "\t110[label=\"multiplicative_expression\"];\n"
                         "109-- 110;\n"
                         "\t111[label=\"unary_expression\"];\n"
                         "110-- 111;\n"
                         "\t112[label=\"primary_expression\"];\n"
                         "111-- 112;\n"
                         "\t113[label=\"identifier\"];\n"
                         "112-- 113;\n"
                         "\t114[label=\"d\"];\n"
                         "113-- 114;\n"
                         "\t115[label=\"END\"];\n"
                         "10-- 115;\n"
                         "\t116[label=\".\"];\n"
                         "0-- 116;\n"
                         "}\n";
//---------------------------------------------------------------------------
static const char* pt3 = "graph {\n"
                         "node [shape=plaintext, ordering=out];\n"
                         "\t0[label=\"function_definition\"];\n"
                         "\t1[label=\"parameter_declarations\"];\n"
                         "0-- 1;\n"
                         "\t2[label=\"PARAM\"];\n"
                         "1-- 2;\n"
                         "\t3[label=\"declarator_list\"];\n"
                         "1-- 3;\n"
                         "\t4[label=\"identifier\"];\n"
                         "3-- 4;\n"
                         "\t5[label=\"a\"];\n"
                         "4-- 5;\n"
                         "\t6[label=\";\"];\n"
                         "1-- 6;\n"
                         "\t7[label=\"variable_declarations\"];\n"
                         "0-- 7;\n"
                         "\t8[label=\"VAR\"];\n"
                         "7-- 8;\n"
                         "\t9[label=\"declarator_list\"];\n"
                         "7-- 9;\n"
                         "\t10[label=\"identifier\"];\n"
                         "9-- 10;\n"
                         "\t11[label=\"b\"];\n"
                         "10-- 11;\n"
                         "\t12[label=\";\"];\n"
                         "7-- 12;\n"
                         "\t13[label=\"constant_declarations\"];\n"
                         "0-- 13;\n"
                         "\t14[label=\"CONST\"];\n"
                         "13-- 14;\n"
                         "\t15[label=\"init_declarator_list\"];\n"
                         "13-- 15;\n"
                         "\t16[label=\"init_declarator\"];\n"
                         "15-- 16;\n"
                         "\t17[label=\"identifier\"];\n"
                         "16-- 17;\n"
                         "\t18[label=\"c\"];\n"
                         "17-- 18;\n"
                         "\t19[label=\"=\"];\n"
                         "16-- 19;\n"
                         "\t20[label=\"literal\"];\n"
                         "16-- 20;\n"
                         "\t21[label=\"1\"];\n"
                         "20-- 21;\n"
                         "\t22[label=\";\"];\n"
                         "13-- 22;\n"
                         "\t23[label=\"compound_statement\"];\n"
                         "0-- 23;\n"
                         "\t24[label=\"BEGIN\"];\n"
                         "23-- 24;\n"
                         "\t25[label=\"statement_list\"];\n"
                         "23-- 25;\n"
                         "\t26[label=\"statement\"];\n"
                         "25-- 26;\n"
                         "\t27[label=\"assignment_expression\"];\n"
                         "26-- 27;\n"
                         "\t28[label=\"identifier\"];\n"
                         "27-- 28;\n"
                         "\t29[label=\"b\"];\n"
                         "28-- 29;\n"
                         "\t30[label=\":=\"];\n"
                         "27-- 30;\n"
                         "\t31[label=\"additive_expression\"];\n"
                         "27-- 31;\n"
                         "\t32[label=\"multiplicative_expression\"];\n"
                         "31-- 32;\n"
                         "\t33[label=\"unary_expression\"];\n"
                         "32-- 33;\n"
                         "\t34[label=\"primary_expression\"];\n"
                         "33-- 34;\n"
                         "\t35[label=\"identifier\"];\n"
                         "34-- 35;\n"
                         "\t36[label=\"a\"];\n"
                         "35-- 36;\n"
                         "\t37[label=\"-\"];\n"
                         "31-- 37;\n"
                         "\t38[label=\"additive_expression\"];\n"
                         "31-- 38;\n"
                         "\t39[label=\"multiplicative_expression\"];\n"
                         "38-- 39;\n"
                         "\t40[label=\"unary_expression\"];\n"
                         "39-- 40;\n"
                         "\t41[label=\"primary_expression\"];\n"
                         "40-- 41;\n"
                         "\t42[label=\"identifier\"];\n"
                         "41-- 42;\n"
                         "\t43[label=\"c\"];\n"
                         "42-- 43;\n"
                         "\t44[label=\"-\"];\n"
                         "38-- 44;\n"
                         "\t45[label=\"additive_expression\"];\n"
                         "38-- 45;\n"
                         "\t46[label=\"multiplicative_expression\"];\n"
                         "45-- 46;\n"
                         "\t47[label=\"unary_expression\"];\n"
                         "46-- 47;\n"
                         "\t48[label=\"primary_expression\"];\n"
                         "47-- 48;\n"
                         "\t49[label=\"literal\"];\n"
                         "48-- 49;\n"
                         "\t50[label=\"2\"];\n"
                         "49-- 50;\n"
                         "\t51[label=\";\"];\n"
                         "25-- 51;\n"
                         "\t52[label=\"statement\"];\n"
                         "25-- 52;\n"
                         "\t53[label=\"RETURN\"];\n"
                         "52-- 53;\n"
                         "\t54[label=\"additive_expression\"];\n"
                         "52-- 54;\n"
                         "\t55[label=\"multiplicative_expression\"];\n"
                         "54-- 55;\n"
                         "\t56[label=\"unary_expression\"];\n"
                         "55-- 56;\n"
                         "\t57[label=\"primary_expression\"];\n"
                         "56-- 57;\n"
                         "\t58[label=\"identifier\"];\n"
                         "57-- 58;\n"
                         "\t59[label=\"b\"];\n"
                         "58-- 59;\n"
                         "\t60[label=\"END\"];\n"
                         "23-- 60;\n"
                         "\t61[label=\".\"];\n"
                         "0-- 61;\n"
                         "}\n";
//---------------------------------------------------------------------------
TEST(TestParseTreePrintVisitor, printPT1) {
    const auto code = "PARAM a, b; VAR d; CONST c = 2; BEGIN d := (a + b); d := d * c; RETURN d END.";
    shared_ptr<CodeManagement> codeM = make_shared<CodeManagement>(code);
    Lexer lex(code, codeM);
    Parsing parser(lex, codeM);
    parser.parsing();

    ASSERT_FALSE(parser.errorOccurred());

    ostringstream buf;
    ParseTreePrintVisitor parseTreePrintVisitor(buf, codeM);
    parser.getTree().accept(parseTreePrintVisitor);

    ASSERT_EQ(buf.str(), pt1);
}
//---------------------------------------------------------------------------
TEST(TestParseTreePrintVisitor, printPT2) {
    const auto code = "VAR d, e; BEGIN d := -1 * (12 / (-6)); e := d + +2; e := -(-(-e)); RETURN e; RETURN d END.";
    shared_ptr<CodeManagement> codeM = make_shared<CodeManagement>(code);
    Lexer lex(code, codeM);
    Parsing parser(lex, codeM);
    parser.parsing();

    ASSERT_FALSE(parser.errorOccurred());

    ostringstream buf;
    ParseTreePrintVisitor parseTreePrintVisitor(buf, codeM);
    parser.getTree().accept(parseTreePrintVisitor);

    ASSERT_EQ(buf.str(), pt2);
}
//---------------------------------------------------------------------------
TEST(TestParseTreePrintVisitor, printPT3) {
    const auto code = "PARAM a; VAR b; CONST c = 1; BEGIN b := a - c - 2; RETURN b END.";
    shared_ptr<CodeManagement> codeM = make_shared<CodeManagement>(code);
    Lexer lex(code, codeM);
    Parsing parser(lex, codeM);
    parser.parsing();

    ASSERT_FALSE(parser.errorOccurred());

    ostringstream buf;
    ParseTreePrintVisitor parseTreePrintVisitor(buf, codeM);
    parser.getTree().accept(parseTreePrintVisitor);

    ASSERT_EQ(buf.str(), pt3);
}
//---------------------------------------------------------------------------
